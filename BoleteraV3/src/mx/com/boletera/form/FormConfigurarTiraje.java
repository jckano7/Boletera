/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package mx.com.boletera.form;

import java.awt.Color;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import mx.com.boletera.bo.ConfigurarTirajeBO;
import mx.com.boletera.model.Tiraje;

/**
 *
 * @author jkano
 */
public class FormConfigurarTiraje extends JDialog {

    /**
     * Creates new form Principal
     */
    public FormConfigurarTiraje(Integer idTiraje) {
        initComponents();
        configurarTirajeBO = new ConfigurarTirajeBO();
        this.idTiraje = idTiraje;
        cargaValores();
    }

    private void cargaValores(){
        if(idTiraje>0){
            try {
                Tiraje tiraje = new Tiraje();
                tiraje.setIdTiraje(idTiraje);
                tiraje = configurarTirajeBO.recuperarTiraje(tiraje);
                txtFolioInicial.setText(tiraje.getFolioInicial().toString());
                txtFolioFinal.setText(tiraje.getFolioFinal().toString());
                txtNumDigitos.setText(tiraje.getNumDigitos().toString());
                txtNumFolios.setText(tiraje.getNumFolios().toString());
            } catch (Exception ex) {
                Logger.getLogger(FormConfigurarTiraje.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConfiguracion = new javax.swing.JPanel();
        lblTitulo = new javax.swing.JLabel();
        lblFolioInicial = new javax.swing.JLabel();
        lblFolioFinal = new javax.swing.JLabel();
        lblNumDigitos = new javax.swing.JLabel();
        lblNumFolios = new javax.swing.JLabel();
        wrnFolioInicial = new javax.swing.JLabel();
        wrnFolioFinal = new javax.swing.JLabel();
        wrnNumDigitos = new javax.swing.JLabel();
        wrnNumFolios = new javax.swing.JLabel();
        txtFolioInicial = new javax.swing.JTextField();
        txtFolioFinal = new javax.swing.JTextField();
        txtNumDigitos = new javax.swing.JTextField();
        txtNumFolios = new javax.swing.JTextField();
        lblConfiguracion = new javax.swing.JLabel();
        wrnConfiguracion = new javax.swing.JLabel();
        cmbConfiguracion = new javax.swing.JComboBox();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnLimpiar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        lblTitulo1 = new javax.swing.JLabel();
        lblTitulo2 = new javax.swing.JLabel();
        lblTitulo3 = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnGenerar = new javax.swing.JButton();

        getContentPane().setLayout(null);

        pnlConfiguracion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        pnlConfiguracion.setLayout(null);

        lblTitulo.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblTitulo.setText("Configurar folios del tiraje");
        pnlConfiguracion.add(lblTitulo);
        lblTitulo.setBounds(8, 8, 178, 20);

        lblFolioInicial.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblFolioInicial.setText("Folio inicial");
        lblFolioInicial.setFocusable(false);
        pnlConfiguracion.add(lblFolioInicial);
        lblFolioInicial.setBounds(10, 50, 213, 20);

        lblFolioFinal.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblFolioFinal.setText("Folio final");
        lblFolioFinal.setFocusable(false);
        pnlConfiguracion.add(lblFolioFinal);
        lblFolioFinal.setBounds(10, 90, 213, 20);

        lblNumDigitos.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblNumDigitos.setText("Número de dígitos");
        lblNumDigitos.setFocusable(false);
        pnlConfiguracion.add(lblNumDigitos);
        lblNumDigitos.setBounds(10, 130, 213, 20);

        lblNumFolios.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblNumFolios.setText("Cantidad de folios por boleto");
        lblNumFolios.setFocusable(false);
        pnlConfiguracion.add(lblNumFolios);
        lblNumFolios.setBounds(10, 170, 213, 20);

        wrnFolioInicial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/warning.png"))); // NOI18N
        wrnFolioInicial.setToolTipText("Datos no válidos");
        wrnFolioInicial.setFocusable(false);
        wrnFolioInicial.setVisible(false);
        pnlConfiguracion.add(wrnFolioInicial);
        wrnFolioInicial.setBounds(420, 50, 16, 20);

        wrnFolioFinal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/warning.png"))); // NOI18N
        wrnFolioFinal.setToolTipText("Datos no válidos");
        wrnFolioFinal.setFocusable(false);
        wrnFolioFinal.setVisible(false);
        pnlConfiguracion.add(wrnFolioFinal);
        wrnFolioFinal.setBounds(420, 90, 16, 20);

        wrnNumDigitos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/warning.png"))); // NOI18N
        wrnNumDigitos.setToolTipText("Datos no válidos");
        wrnNumDigitos.setFocusable(false);
        wrnNumDigitos.setVisible(false);
        pnlConfiguracion.add(wrnNumDigitos);
        wrnNumDigitos.setBounds(420, 130, 16, 20);

        wrnNumFolios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/warning.png"))); // NOI18N
        wrnNumFolios.setToolTipText("Datos no válidos");
        wrnNumFolios.setFocusable(false);
        wrnNumFolios.setVisible(false);
        pnlConfiguracion.add(wrnNumFolios);
        wrnNumFolios.setBounds(420, 170, 16, 20);

        txtFolioInicial.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFolioInicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFolioInicialFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFolioInicialFocusLost(evt);
            }
        });
        pnlConfiguracion.add(txtFolioInicial);
        txtFolioInicial.setBounds(240, 50, 173, 20);

        txtFolioFinal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtFolioFinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtFolioFinalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFolioFinalFocusLost(evt);
            }
        });
        pnlConfiguracion.add(txtFolioFinal);
        txtFolioFinal.setBounds(240, 90, 173, 20);

        txtNumDigitos.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNumDigitos.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumDigitosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumDigitosFocusLost(evt);
            }
        });
        pnlConfiguracion.add(txtNumDigitos);
        txtNumDigitos.setBounds(240, 130, 173, 20);

        txtNumFolios.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNumFolios.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNumFoliosFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNumFoliosFocusLost(evt);
            }
        });
        pnlConfiguracion.add(txtNumFolios);
        txtNumFolios.setBounds(240, 170, 173, 20);

        lblConfiguracion.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblConfiguracion.setText("Configuración de boleto");
        lblConfiguracion.setFocusable(false);
        pnlConfiguracion.add(lblConfiguracion);
        lblConfiguracion.setBounds(10, 210, 213, 20);

        wrnConfiguracion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/warning.png"))); // NOI18N
        wrnConfiguracion.setToolTipText("Datos no válidos");
        wrnConfiguracion.setFocusable(false);
        wrnNumFolios.setVisible(false);
        pnlConfiguracion.add(wrnConfiguracion);
        wrnConfiguracion.setBounds(420, 210, 16, 20);

        cmbConfiguracion.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione" }));
        pnlConfiguracion.add(cmbConfiguracion);
        cmbConfiguracion.setBounds(240, 210, 170, 20);

        getContentPane().add(pnlConfiguracion);
        pnlConfiguracion.setBounds(10, 10, 460, 250);

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/accept.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAceptar);
        btnAceptar.setBounds(490, 340, 116, 47);

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar);
        btnCancelar.setBounds(490, 400, 116, 47);

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/repeat.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        getContentPane().add(btnLimpiar);
        btnLimpiar.setBounds(490, 460, 116, 47);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        jScrollPane1.setViewportView(jList1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 103, 159);

        jScrollPane2.setViewportView(jList2);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(200, 60, 107, 159);

        jButton1.setText(">>");
        jPanel1.add(jButton1);
        jButton1.setBounds(130, 90, 56, 23);

        jButton2.setText("<<");
        jPanel1.add(jButton2);
        jButton2.setBounds(130, 140, 56, 23);

        lblTitulo1.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblTitulo1.setText("Reglas del tiraje");
        jPanel1.add(lblTitulo1);
        lblTitulo1.setBounds(8, 8, 108, 20);

        lblTitulo2.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblTitulo2.setText("Existentes");
        jPanel1.add(lblTitulo2);
        lblTitulo2.setBounds(10, 30, 68, 20);

        lblTitulo3.setFont(new java.awt.Font("Calibri", 1, 16)); // NOI18N
        lblTitulo3.setText("Seleccionadas");
        jPanel1.add(lblTitulo3);
        lblTitulo3.setBounds(200, 30, 95, 20);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar);
        btnAgregar.setBounds(330, 60, 116, 39);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(10, 270, 460, 240);

        btnGenerar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/process.png"))); // NOI18N
        btnGenerar.setText("Generar");
        btnGenerar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGenerar);
        btnGenerar.setBounds(490, 280, 116, 47);

        setBounds(0, 0, 641, 557);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        Boolean valido = true;
        //folio inicial
        Integer folioInicial = 0;
        String valor = txtFolioInicial.getText();
        boolean cumplePatron = Pattern.matches("^[0-9]{1,7}$", valor);
        if (cumplePatron) {
            try {
                folioInicial = Integer.parseInt(txtFolioInicial.getText().trim());
            } catch (Exception e) {
                wrnFolioInicial.setVisible(true);
                txtFolioInicial.setBackground(Color.red);
                valido = false;
            }
        } else {
            wrnFolioInicial.setVisible(true);
            txtFolioInicial.setBackground(Color.red);
            valido = false;
        }

        //folio final
        Integer folioFinal = 0;
        valor = txtFolioFinal.getText();
        cumplePatron = Pattern.matches("^[0-9]{1,7}$", valor);
        if (cumplePatron) {
            try {
                folioFinal = Integer.parseInt(txtFolioFinal.getText().trim());
            } catch (Exception e) {
                wrnFolioFinal.setVisible(true);
                txtFolioFinal.setBackground(Color.red);
                valido = false;
            }
        } else {
            wrnFolioFinal.setVisible(true);
            txtFolioFinal.setBackground(Color.red);
            valido = false;
        }

        //num digitos
        Integer numDigitos = 0;
        valor = txtNumDigitos.getText();
        cumplePatron = Pattern.matches("^[1-9]{1}$", valor);
        if (cumplePatron) {
            try {
                numDigitos = Integer.parseInt(txtNumDigitos.getText().trim());
            } catch (Exception e) {
                wrnNumDigitos.setVisible(true);
                txtNumDigitos.setBackground(Color.red);
                valido = false;
            }
        } else {
            wrnNumDigitos.setVisible(true);
            txtNumDigitos.setBackground(Color.red);
            valido = false;
        }

        //num folios
        int numFolios = 0;
        valor = txtNumFolios.getText();
        cumplePatron = Pattern.matches("^[1-9]{1}$", valor);
        if (cumplePatron) {
            try {
                numFolios = Integer.parseInt(txtNumFolios.getText().trim());
            } catch (Exception e) {
                wrnNumFolios.setVisible(true);
                txtNumFolios.setBackground(Color.red);
                valido = false;
            }
        } else {
            wrnNumFolios.setVisible(true);
            txtNumFolios.setBackground(Color.red);
            valido = false;
        }
        if (valido) {
            if (folioInicial >= folioFinal) {
                JOptionPane.showMessageDialog(this, "Folio final debe ser mayor a folio inicial");
            } else {
                int num = folioFinal.toString().length();
                if (num > numDigitos) {
                    JOptionPane.showMessageDialog(this, "El folio final excede los digitos permitidos");
                } else {
                    Tiraje tiraje = new Tiraje();
                    tiraje.setIdTiraje(idTiraje);
                    tiraje.setFolioInicial(folioInicial);
                    tiraje.setFolioFinal(folioFinal);
                    tiraje.setNumDigitos(numDigitos);
                    tiraje.setNumFolios(numFolios);
                    try {
                        switch(configurarTirajeBO.guardarTiraje(tiraje)){
                            case 1:
                                JOptionPane.showMessageDialog(this, "El folio final excede los digitos permitidos");
                                break;
                            default:
                                JOptionPane.showMessageDialog(this, "El folio final excede los digitos permitidos");
                                break;
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "ERROR: " + ex);
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Revise los datos ingresados");
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Integer res = JOptionPane.showConfirmDialog(this, "¿Desea cancelar la operacion?", "Salir", JOptionPane.YES_NO_OPTION);
        if (res.equals(0)) {
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        txtFolioInicial.setText("");
        txtFolioInicial.setBackground(Color.white);
        wrnFolioInicial.setVisible(false);
        txtFolioFinal.setText("");
        txtFolioFinal.setBackground(Color.white);
        wrnFolioFinal.setVisible(false);
        txtNumDigitos.setText("");
        txtNumDigitos.setBackground(Color.white);
        wrnNumDigitos.setVisible(false);
        txtNumFolios.setText("");
        txtNumFolios.setBackground(Color.white);
        wrnNumFolios.setVisible(false);
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void txtFolioFinalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFolioFinalFocusGained
        wrnFolioFinal.setVisible(false);
        txtFolioFinal.setBackground(Color.white);
    }//GEN-LAST:event_txtFolioFinalFocusGained

    private void txtFolioFinalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFolioFinalFocusLost
        String valor = txtFolioFinal.getText();
        boolean cumplePatron = Pattern.matches("^[0-9]{1,7}$", valor);
        if (!cumplePatron) {
            wrnFolioFinal.setVisible(true);
            txtFolioFinal.setBackground(Color.red);
        }
    }//GEN-LAST:event_txtFolioFinalFocusLost

    private void txtFolioInicialFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFolioInicialFocusGained
        wrnFolioInicial.setVisible(false);
        txtFolioInicial.setBackground(Color.white);
    }//GEN-LAST:event_txtFolioInicialFocusGained

    private void txtFolioInicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFolioInicialFocusLost
        String valor = txtFolioInicial.getText();
        boolean cumplePatron = Pattern.matches("^[0-9]{1,7}$", valor);
        if (!cumplePatron) {
            wrnFolioInicial.setVisible(true);
            txtFolioInicial.setBackground(Color.red);
        }
    }//GEN-LAST:event_txtFolioInicialFocusLost

    private void txtNumDigitosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumDigitosFocusGained
        wrnNumDigitos.setVisible(false);
        txtNumDigitos.setBackground(Color.white);
    }//GEN-LAST:event_txtNumDigitosFocusGained

    private void txtNumDigitosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumDigitosFocusLost
        String valor = txtNumDigitos.getText();
        boolean cumplePatron = Pattern.matches("^[1-9]{1}$", valor);
        if (!cumplePatron) {
            wrnNumDigitos.setVisible(true);
            txtNumDigitos.setBackground(Color.red);
        }
    }//GEN-LAST:event_txtNumDigitosFocusLost

    private void txtNumFoliosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumFoliosFocusGained
        wrnNumFolios.setVisible(false);
        txtNumFolios.setBackground(Color.white);
    }//GEN-LAST:event_txtNumFoliosFocusGained

    private void txtNumFoliosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNumFoliosFocusLost
        String valor = txtNumFolios.getText();
        boolean cumplePatron = Pattern.matches("^[1-9]{1}$", valor);
        if (!cumplePatron) {
            wrnNumFolios.setVisible(true);
            txtNumFolios.setBackground(Color.red);
        }
    }//GEN-LAST:event_txtNumFoliosFocusLost

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        frmReglas = new FormConfigurarRegla();
        frmReglas.setVisible(true);
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarActionPerformed
        try{
            Boolean valido = true;
            //folio inicial
            Integer folioInicial = 0;
            String valor = txtFolioInicial.getText();
            boolean cumplePatron = Pattern.matches("^[0-9]{1,7}$", valor);
            if (cumplePatron) {
                try {
                    folioInicial = Integer.parseInt(txtFolioInicial.getText().trim());
                } catch (Exception e) {
                    wrnFolioInicial.setVisible(true);
                    txtFolioInicial.setBackground(Color.red);
                    valido = false;
                }
            } else {
                wrnFolioInicial.setVisible(true);
                txtFolioInicial.setBackground(Color.red);
                valido = false;
            }

            //folio final
            Integer folioFinal = 0;
            valor = txtFolioFinal.getText();
            cumplePatron = Pattern.matches("^[0-9]{1,7}$", valor);
            if (cumplePatron) {
                try {
                    folioFinal = Integer.parseInt(txtFolioFinal.getText().trim());
                } catch (Exception e) {
                    wrnFolioFinal.setVisible(true);
                    txtFolioFinal.setBackground(Color.red);
                    valido = false;
                }
            } else {
                wrnFolioFinal.setVisible(true);
                txtFolioFinal.setBackground(Color.red);
                valido = false;
            }

            //num digitos
            Integer numDigitos = 0;
            valor = txtNumDigitos.getText();
            cumplePatron = Pattern.matches("^[1-9]{1}$", valor);
            if (cumplePatron) {
                try {
                    numDigitos = Integer.parseInt(txtNumDigitos.getText().trim());
                } catch (Exception e) {
                    wrnNumDigitos.setVisible(true);
                    txtNumDigitos.setBackground(Color.red);
                    valido = false;
                }
            } else {
                wrnNumDigitos.setVisible(true);
                txtNumDigitos.setBackground(Color.red);
                valido = false;
            }

            //num folios
            int numFolios = 0;
            valor = txtNumFolios.getText();
            cumplePatron = Pattern.matches("^[1-9]{1}$", valor);
            if (cumplePatron) {
                try {
                    numFolios = Integer.parseInt(txtNumFolios.getText().trim());
                } catch (Exception e) {
                    wrnNumFolios.setVisible(true);
                    txtNumFolios.setBackground(Color.red);
                    valido = false;
                }
            } else {
                wrnNumFolios.setVisible(true);
                txtNumFolios.setBackground(Color.red);
                valido = false;
            }
            if (valido) {
                if (folioInicial >= folioFinal) {
                    JOptionPane.showMessageDialog(this, "Folio final debe ser mayor a folio inicial");
                } else {
                    int num = folioFinal.toString().length();
                    if (num > numDigitos) {
                        JOptionPane.showMessageDialog(this, "El folio final excede los digitos permitidos");
                    } else {
                        //ArchivoPDF archivo = new ArchivoPDF(folioInicial, folioFinal, numDigitos, numFolios, 1);
                        JFileChooser dialogo = new JFileChooser();
                        dialogo.setDialogTitle("Guardar archivo");
                        FileNameExtensionFilter filter = new FileNameExtensionFilter("PDF", "pdf");
                        dialogo.setFileFilter(filter);
                        int estado = dialogo.showSaveDialog(this);
                        if (estado == JFileChooser.APPROVE_OPTION) {
                            File archivoelegido = dialogo.getSelectedFile();
                            String path = archivoelegido.getAbsolutePath();
                            int res = configurarTirajeBO.generarTiraje(null, path);//archivo.generarPDF(path);
                            if (res == 0) {
                                JOptionPane.showMessageDialog(this, "Guardado exitoso");
                            }
                        }
                    }
                }
            } else {
                JOptionPane.showMessageDialog(this, "Revise los datos ingresados");
            }
        } catch (Exception e) {
            
        }
    }//GEN-LAST:event_btnGenerarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGenerar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JComboBox cmbConfiguracion;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblConfiguracion;
    private javax.swing.JLabel lblFolioFinal;
    private javax.swing.JLabel lblFolioInicial;
    private javax.swing.JLabel lblNumDigitos;
    private javax.swing.JLabel lblNumFolios;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JLabel lblTitulo1;
    private javax.swing.JLabel lblTitulo2;
    private javax.swing.JLabel lblTitulo3;
    private javax.swing.JPanel pnlConfiguracion;
    private javax.swing.JTextField txtFolioFinal;
    private javax.swing.JTextField txtFolioInicial;
    private javax.swing.JTextField txtNumDigitos;
    private javax.swing.JTextField txtNumFolios;
    private javax.swing.JLabel wrnConfiguracion;
    private javax.swing.JLabel wrnFolioFinal;
    private javax.swing.JLabel wrnFolioInicial;
    private javax.swing.JLabel wrnNumDigitos;
    private javax.swing.JLabel wrnNumFolios;
    // End of variables declaration//GEN-END:variables
    private FormConfigurarRegla frmReglas;
    private FormConfigurarBoleto frmBoletos;
    private ConfigurarTirajeBO configurarTirajeBO;
    private Integer idTiraje;
}
